{"remainingRequest":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/src/components/SidebarPlugin/SideBar.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/src/components/SidebarPlugin/SideBar.vue","mtime":1606234876396},{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHsKICAubmF2YmFyLXNlYXJjaC1mb3JtLW1vYmlsZSwKICAubmF2LW1vYmlsZS1tZW51IHsKICAgIGRpc3BsYXk6IG5vbmU7CiAgfQp9Cg=="},{"version":3,"sources":["SideBar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsIA;AACA;AACA;AACA;AACA;AACA","file":"SideBar.vue","sourceRoot":"src/components/SidebarPlugin","sourcesContent":["<template>\n  <div\n    class=\"sidebar\"\n    :data-color=\"activeColor\"\n    :data-image=\"backgroundImage\"\n    :data-background-color=\"backgroundColor\"\n    :style=\"sidebarStyle\"\n  >\n    <div class=\"logo\">\n      <a href=\"\" class=\"simple-text logo-mini\" target=\"_blank\">\n        <div style=\"padding: 4px 0;\">\n          NC\n        </div>\n      </a>\n      <a href=\"\" class=\"simple-text logo-normal\" target=\"_blank\">\n        <template>{{ title }}</template>\n      </a>\n     <!-- <div class=\"navbar-minimize\">-->\n<!--        <md-button-->\n<!--          id=\"minimizeSidebar\"-->\n<!--          class=\"md-round md-just-icon md-transparent\"-->\n<!--          @click=\"minimizeSidebar\"-->\n<!--        >-->\n<!--          <i class=\"material-icons text_align-center visible-on-sidebar-regular\"-->\n<!--            >more_vert</i-->\n<!--          >-->\n<!--          <i-->\n<!--            class=\"material-icons design_bullet-list-67 visible-on-sidebar-mini\"-->\n<!--            >view_list</i-->\n<!--          >-->\n<!--        </md-button>-->\n<!--      </div> -->\n    </div>\n    <div class=\"sidebar-wrapper\" ref=\"sidebarScrollArea\">\n      <slot></slot>\n      <md-list class=\"nav\">\n        <slot name=\"links\">\n          <sidebar-item\n            v-for=\"(link, index) in sidebarLinks\"\n            :key=\"link.name + index\"\n            :link=\"link\"\n          >\n            <sidebar-item\n              v-for=\"(subLink, index) in link.children\"\n              :key=\"subLink.name + index\"\n              :link=\"subLink\"\n            >\n            </sidebar-item>\n          </sidebar-item>\n        </slot>\n      </md-list>\n    </div>\n  </div>\n</template>\n<script>\nexport default {\n  name: \"sidebar\",\n  props: {\n    title: {\n      type: String,\n      default: \"Now Community\"\n    },\n    \n    activeColor: {\n      type: String,\n      default: \"green\",\n      validator: value => {\n        let acceptedValues = [\n          \"\",\n          \"purple\",\n          \"azure\",\n          \"green\",\n          \"orange\",\n          \"danger\",\n          \"rose\"\n        ];\n        return acceptedValues.indexOf(value) !== -1;\n      }\n    },\n    backgroundImage: {\n      type: String,\n      default: `${process.env.VUE_APP_APP_BASE_URL}/img/sidebar-2.jpg`\n    },\n    backgroundColor: {\n      type: String,\n      default: \"black\",\n      validator: value => {\n        let acceptedValues = [\"\", \"black\", \"white\", \"red\"];\n        return acceptedValues.indexOf(value) !== -1;\n      }\n    },\n    logo: {\n      type: String,\n      default: `${process.env.VUE_APP_APP_BASE_URL}/img/vue-logo.png`\n    },\n    sidebarLinks: {\n      type: Array,\n      default: () => []\n    },\n    autoClose: {\n      type: Boolean,\n      default: true\n    }\n  },\n  created() {\n    this.$sidebar.toggleMinimize();\n  },\n  provide() {\n    return {\n      autoClose: this.autoClose\n    };\n  },\n  methods: {\n    minimizeSidebar() {\n      if (this.$sidebar) {\n        this.$sidebar.toggleMinimize();\n      }\n    }\n  },\n  computed: {\n    sidebarStyle() {\n      return {\n        backgroundImage: `url(${this.backgroundImage})`\n      };\n    }\n  },\n  beforeDestroy() {\n    if (this.$sidebar.showSidebar) {\n      this.$sidebar.showSidebar = false;\n    }\n  }\n};\n</script>\n<style>\n@media (min-width: 992px) {\n  .navbar-search-form-mobile,\n  .nav-mobile-menu {\n    display: none;\n  }\n}\n</style>\n"]}]}