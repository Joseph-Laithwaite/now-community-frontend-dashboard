{"remainingRequest":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/src/pages/Dashboard/Pages/Register.vue?vue&type=template&id=27802466&","dependencies":[{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/src/pages/Dashboard/Pages/Register.vue","mtime":1598060882000},{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}