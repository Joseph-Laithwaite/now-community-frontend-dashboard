{"remainingRequest":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/src/components/InputBlocks/ncForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/src/components/InputBlocks/ncForm.vue","mtime":1606406240703},{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ncForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"ncForm.vue","sourceRoot":"src/components/InputBlocks","sourcesContent":["<template>\n  <form novalidate @submit.prevent=\"validateItem\" class=\"md-layout md-alignment-top-center\">\n    <!-- class=\"md-layout md-gutter\" -->\n      <div\n        v-for=\"field in itemInfo\"\n        :key=\"field.id\"\n        class=\"md-layout-item md-size-100\"\n      >\n        <!-- typeof field.fieldOptions.hideForNew !== 'undefined' && -->\n        <span v-if=\"!((field.fieldOptions.hideForNew === true && newItem))\">\n\n          <md-field :class=\"getValidationClass(field.id)\">\n            <md-icon v-if=\"typeof field.fieldOptions.md_icon !== 'undefined'\" v-text=\"field.fieldOptions.md_icon\"></md-icon>\n            <md-icon v-if=\"typeof field.fieldOptions.fa_icon !== 'undefined'\" :class=\"field.fieldOptions.fa_icon\"></md-icon>\n            \n              <!-- class=\"md-layout md-alignment-center-left\"> -->\n            <label \n              v-if=\"field.fieldOptions.hideLabel===false || typeof field.fieldOptions.hideLabel === 'undefined'\"\n              :for=\"field.id\"> \n              {{field.label}}\n            </label>\n\n            <span \n              v-if=\"typeof field.fieldOptions.helperText !== 'undefined'\" \n              class=\"md-helper-text\"\n              >\n              {{field.fieldOptions.helperText}}\n            </span>\n            \n            <md-input\n              v-if=\"field.fieldType==='input'\"\n              :name=\"field.id\" \n              :id=\"field.id\" \n              :autocomplete=\"field.fieldOptions.autocomplete\"\n              :spellcheck=\"field.fieldOptions.spellcheck\"\n              :required=\"field.fieldOptions.required\"\n              :disabled=\"field.fieldOptions.disabled || sending\"\n              :readonly=\"field.fieldOptions.readonly\"\n              :type=\"field.fieldOptions.type !== null ? field.fieldOptions.type : 'text'\"\n              @input=\"serverValidationErrors[field.id] = null\" \n              v-model=\"form[field.id]\" \n            />\n\n            <md-textarea \n              md-autogrow\n              v-if=\"field.fieldType==='textarea'\"\n              :name=\"field.id\" \n              :id=\"field.id\" \n              :required=\"field.fieldOptions.required\"\n              :disabled=\"field.fieldOptions.disabled || sending\"\n              :readonly=\"field.fieldOptions.readonly\"\n              :type=\"field.fieldOptions.type !== null ? field.fieldOptions.type : 'text'\"\n              @input=\"serverValidationErrors[field.id] = null\" \n              v-model=\"form[field.id]\" \n            ></md-textarea>\n\n            <md-select \n              style=\"z-index:11;\"\n              v-if=\"field.fieldType==='brandSelect'\"\n              :name=\"field.id\" \n              :id=\"field.id\" \n              :placeholder=\"field.label\"  \n              v-model=\"form[field.id]\" \n              md-dense \n              :disabled=\"field.fieldOptions.disabled || sending\"\n              :required=\"field.fieldOptions.required\"\n              :readonly=\"field.fieldOptions.readonly\"\n              :type=\"field.fieldOptions.type !== null ? field.fieldOptions.type : 'text'\"\n              @input=\"serverValidationErrors[field.id] = null\" \n              @md-selected=\"makeNew('brand')\"\n            >\n              <md-option key=\"new\" value=\"new\">\n                Add new Brand\n              </md-option>\n              <md-option \n                v-for=\"option in brands\" \n                :key=\"option.id\" \n                :value=\"option.id\"\n              >\n                {{option.name}}\n              </md-option>\n            </md-select>\n            <edit-brand-card v-if=\"createNewBrand\"></edit-brand-card>\n            \n            <md-select \n              style=\"z-index:11;\"\n              v-if=\"field.fieldType==='independentSelect'\"\n              :name=\"field.id\" \n              :id=\"field.id\" \n              :placeholder=\"field.label\"  \n              v-model=\"form[field.id]\" \n              md-dense \n              :disabled=\"field.fieldOptions.disabled || sending\"\n              :required=\"field.fieldOptions.required\"\n              :readonly=\"field.fieldOptions.readonly\"\n              :type=\"field.fieldOptions.type !== null ? field.fieldOptions.type : 'text'\"\n              @input=\"serverValidationErrors[field.id] = null\" \n              @md-selected=\"makeNew(field.id)\"\n            >\n              <md-option key=\"new\" value=\"new\">\n                Add new {{field.label}}\n              </md-option>\n              <md-option \n                v-for=\"option in independents\" \n                :key=\"option.id\" \n                :value=\"option.id\"\n              >\n                {{option.name}}\n              </md-option>\n            </md-select>\n\n            <md-select \n              style=\"z-index:11;\"\n              v-if=\"field.fieldType==='dynamicSelect'\"\n              :name=\"field.id\" \n              :id=\"field.id\" \n              :placeholder=\"field.label\"  \n              v-model=\"form[field.id]\" \n              md-dense \n              :disabled=\"field.fieldOptions.disabled || sending\"\n              :required=\"field.fieldOptions.required\"\n              :readonly=\"field.fieldOptions.readonly\"\n              :type=\"field.fieldOptions.type !== null ? field.fieldOptions.type : 'text'\"\n              @input=\"serverValidationErrors[field.id] = null\" \n            >\n              <md-option \n                v-for=\"option in dynamicOptions[field.id]\" \n                :key=\"option.id\" \n                :value=\"option.id\"\n              >\n                {{option.name}}\n              </md-option>\n            </md-select>\n\n            <md-autocomplete \n              style=\"z-index:11;\"\n              v-if=\"field.fieldType==='autoComplete'\"\n              v-model=\"form[field.id]\" \n              :md-options=\"brands\" \n              @md-changed=\"getBrands\" \n              @md-opened=\"getBrands\"\n            >\n              <!-- <label>Brand</label> -->\n\n              <template \n                slot=\"md-autocomplete-item\" \n                slot-scope=\"{ item }\"\n              >\n                {{ item.name }}\n              </template>\n            </md-autocomplete>\n\n            <md-file \n              v-if=\"field.fieldType==='file'\"\n              :placeholder=\"field.label\"  \n              :name=\"field.id\" \n              :id=\"field.id\" \n              :required=\"field.fieldOptions.required\"\n              :disabled=\"field.fieldOptions.disabled || sending\"\n              :readonly=\"field.fieldOptions.readonly\"\n              :type=\"field.fieldOptions.type !== null ? field.fieldOptions.type : 'file'\"\n              :accept=\"field.fieldOptions.accept\"\n              @input=\"serverValidationErrors[field.id] = null\" \n              v-model=\"form[field.id]\" \n            />\n\n              <!-- class=\"md-layout md-alignment-center-right\" -->\n            <md-switch \n              style=\"padding-top: 20px;\"\n              v-if=\"field.fieldType==='switch'\"\n              :placeholder=\"field.label\"  \n              :name=\"field.id\" \n              :id=\"field.id\" \n              :required=\"field.fieldOptions.required\"\n              :disabled=\"field.fieldOptions.disabled || sending\"\n              :readonly=\"field.fieldOptions.readonly\"\n              :type=\"field.fieldOptions.type !== null ? field.fieldOptions.type : 'checkbox'\"\n              @input=\"serverValidationErrors[field.id] = null\" \n              v-model=\"form[field.id]\"\n            >\n            </md-switch>\n            <md-switch \n              style=\"padding-top: 20px;\"\n              v-if=\"field.fieldType==='independentOwnerSwitch'\"\n              :placeholder=\"field.label\"  \n              :name=\"field.id\" \n              :id=\"field.id\" \n              :required=\"field.fieldOptions.required\"\n              :disabled=\"field.fieldOptions.disabled || sending\"\n              :readonly=\"field.fieldOptions.readonly\"\n              :type=\"field.fieldOptions.type !== null ? field.fieldOptions.type : 'checkbox'\"\n              @input=\"serverValidationErrors[field.id] = null\" \n              :value=\"item[field.id]\"\n              v-model=\"form[field.id]\"\n            >\n              <!-- @change=\"independentOwnerSwitch\" -->\n            </md-switch>\n\n              <!-- :onclick=\"alert('hello there')\" -->\n            <!-- <span \n              id=\"attach-button\"\n              v-if=\"field.fieldType==='image'\"\n              @click=\"alert('clicked')\"\n              >\n              <md-icon class=\"md-layout md-alignment-center-left\">attach_file</md-icon>\n              <md-select \n                class=\"md- md-layout md-alignment-center-right\"\n                :placeholder=\"field.label\"\n                @md-opened=\"alert('clicked')\"\n              ></md-select>\n            </span> -->\n\n            <!-- Image uploader -->\n              <md-icon\n                v-if=\"field.fieldType==='image'\"\n                @click.native=\"showImageDialog[field.id]=!showImageDialog[field.id]\">\n                  attach_file\n              </md-icon>\n              <label \n                v-if=\"field.fieldType==='image'\"\n                :for=\"field.id\" v-text=\"field.label\">\n              </label>\n              <md-input\n                v-if=\"field.fieldType==='image'\"\n                readonly\n                :placeholder=\"field.label\"\n                :name=\"field.id\" \n                :id=\"field.id\" \n                :required=\"field.fieldOptions.required\"\n                :disabled=\"field.fieldOptions.disabled || sending\"\n                @click=\"showImageDialog[field.id]=!showImageDialog[field.id]\"\n                v-model=\"image[field.id]\"\n              />\n              <image-dialog\n                v-if=\"field.fieldType==='image'\"\n                :showDialog=\"showImageDialog[field.id]\"\n                @close-image-dialog=\"showImageDialog[field.id]=false\"\n                :imageID=\"form[field.id]\"\n                :label=\"field.label\"\n                :id=\"field.id\"\n                model=\"App\\\\Models\\\\Independent\"\n                @file-uploaded=\"setImage\"\n              ></image-dialog>\n            \n            <!-- <span class=\"md-error\" v-text=\"getErrors(field)[0]\"></span> -->\n            <span class=\"md-error\" v-if=\"hasValidation(field, 'required')\">\n              <!-- <span v-if=\"this.$v.form[field.id][type] === false\"> -->\n                The {{field.label}} is required <br>\n              <!-- </span> -->\n            </span>\n            <span class=\"md-error\" v-if=\"hasValidation(field, 'minLength')\">\n              The {{field.label}} must be longer than {{$v.form[field.id].$params.minLength.min}} characters <br>\n            </span>\n            <span class=\"md-error\" v-if=\"hasValidation(field, 'maxLength')\">\n              The {{field.label}} must be less than {{$v.form[field.id].$params.maxLength.max}} characters <br>\n            </span>\n            <span class=\"md-error\" v-if=\"hasValidation(field, 'decimal')\">\n              The {{field.label}} must be a valid decimal number  <br>\n            </span>\n            <span class=\"md-error\" v-if=\"hasValidation(field, 'integer')\">\n              The {{field.label}} must be a valid whole number  <br>\n            </span>\n            <span class=\"md-error\" v-if=\"hasValidation(field, 'alphaNum')\">\n              The {{field.label}} must contain only Alpha Numeric characters with no spaces  <br>\n            </span>\n            <span class=\"md-error\" v-if=\"hasValidation(field, 'url')\">\n              The {{field.label}} must be URL with no spaces  <br>\n            </span>\n            <span class=\"md-error\" v-if=\"hasValidation(field, 'slug')\">\n              The {{field.label}} must contain alpha numeric characters and hyphen (-) only <br>\n            </span>\n          </md-field>\n          <span v-if=\"serverValidationErrors[field.id]\">\n            <span \n              class=\"md-error\" \n              v-for=\"error in serverValidationErrors[field.id]\"\n              :key=\"error\"                    \n            >\n              {{error}}\n              <br>\n            </span>\n          </span>\n        </span>            \n      </div>\n  </form>\n</template>\n\n<script>\n  import { validationMixin } from 'vuelidate'\n  // import {\n  //   helpers,\n  //   required,\n  //   email,\n  //   minLength,\n  //   maxLength,\n  //   alphaNum,\n  //   decimal,\n  //   integer,\n  //   url,\n  // } from 'vuelidate/lib/validators'\n\n  // const slug = helpers.regex('alpha', /^[-a-zA-Z0-9_]+$/)\n  import ImageDialog from '../ImageDialog.vue'\n  import EditBrandCard from '../EditBrandCard.vue'\n  \n  export default {\n    name: 'nc-form',\n    mixins: [validationMixin],\n    components: {\n      'edit-brand-card': EditBrandCard,\n      ImageDialog,\n    },\n    props: {\n      item: {type: Object, required: false},\n      validate: {type: Boolean, required: true, default:false},\n      newItem: {\n        type:Boolean, \n        required: true\n      },\n      itemInfo: {\n        required: true,\n        type: [Array, Object], \n        // default:()=>\n        // [\n        //   {\n        //     label: \"ID\",\n        //     id: \"id\",\n        //     fieldType: 'input',\n        //     fieldOptions:{\n        //       hideForNew: true,\n        //       type: 'number',\n        //       required: true,\n        //       disabled: true,\n        //     },\n        //     validationsFunctions: {required, decimal},\n        //   },\n        //   {\n        //     label: \"Name\",\n        //     id: \"name\",\n        //     fieldType: 'input',\n        //     validationsFunctions: {required, minLength:minLength(3)},\n        //     fieldOptions: {\n        //       type: 'text',\n        //       required: true,\n        //     }\n        //   },\n        //   {\n        //     label: \"Slug\",\n        //     id: \"slug\",\n        //     fieldType: 'input',\n        //     validationsFunctions: {required, minLength:minLength(3), slug},\n        //     fieldOptions: {\n        //       type: 'text',\n        //       required: true,\n        //     }\n        //   },          \n        //   {\n        //     label: \"Price\",\n        //     id: \"price\",\n        //     fieldType: 'input',\n        //     validationsFunctions: {required,decimal},\n        //     fieldOptions: {\n        //       type: 'number',\n        //       required: true,  \n        //       min: 0,\n        //       max: null,\n        //     }\n        //   },\n        //   {\n        //     label: \"VAT\",\n        //     id: \"vat\",\n        //     fieldType: 'input',\n        //     validationsFunctions: {required,decimal},\n        //     fieldOptions: {\n        //       type: 'number',\n        //       required: true,  \n        //       min: 0,\n        //       max: null,\n        //     }\n        //   },\n        //   {\n        //     label: \"Deposit\",\n        //     id: \"deposit\",\n        //     fieldType: 'input',\n        //     validationsFunctions: {decimal},\n        //     fieldOptions: {\n        //       type: 'number',\n        //       required: false,  \n        //       min: 0,\n        //       max: null,\n        //     }\n        //   }, \n        //   {\n        //     label: \"Brand\",\n        //     id: \"brand_id\",\n        //     fieldType: 'brandSelect',\n        //     validationsFunctions: {required},\n        //     fieldOptions: {\n        //       required: true,  \n        //     }\n        //   },\n        // ]\n      }\n    },\n\n    data: () => ({\n      form: {},\n      serverValidationErrors: {},\n      itemSaved: false,\n      sending: false,\n\n      brands:[],\n      createNewBrand:false,\n\n      independents:[],\n      createNewIndependent:false,\n\n      image:{},\n      showImageDialog:{},\n    }),\n    \n    \n    validations(){\n      var form = new Object();\n      for (let i = 0; i < this.itemInfo.length; i++) {\n        let field = this.itemInfo[i].id\n        if(!(typeof this.itemInfo[i].fieldOptions.hideForNew !== 'undefined' && this.itemInfo[i].fieldOptions.hideForNew == true && this.newItem)){\n          form[field] = this.itemInfo[i].validationsFunctions\n        }\n      }\n      return {form};\n    },\n   \n    methods: {\n      getValidationClass (fieldName) {\n        const field = this.$v.form[fieldName]\n        if (field) {\n          return {\n            'md-invalid': field.$invalid && field.$dirty\n          }\n        }\n      },\n\n      hasValidation(field, type){\n        if (typeof this.$v.form[field.id] != \"undefined\"){\n          if (typeof this.$v.form[field.id][type] != \"undefined\"){\n            if(this.$v.form[field.id][type] === false){\n              return true\n            }\n          }\n        }\n        return false\n      },\n    \n      setForm () {\n        for (let i = 0; i < this.itemInfo.length; i++) {\n          if(typeof this.itemInfo[i] !== 'undefined'){\n            let field = this.itemInfo[i].id\n            try{\n              this.$set(this.form, field, this.item[field]);\n              if(this.itemInfo[i].fieldType==='image'){\n                // showImageDialog[field.id]\n                this.$set(this.showImageDialog, field, false);\n              }\n              // Vue.set( this.form, field, this.item[field] )\n              // this.form[field] = this.item[field]\n            }\n            catch{\n              console.log('set form error');\n            }\n          }\n        }\n      },\n\n      validateItem() {\n        this.$v.$touch()\n        if (!this.$v.$invalid) {\n          this.$emit('validation-success',this.form);\n        }else{\n          this.$emit('validation-failed',this.form);\n        }\n      },\n\n      async setSelectOptions(model, forceUpdate=false) {\n        console.log('set Select options');\n        if(typeof this.$store.getters[model + \"/list\"].length == 'undefined' || forceUpdate === true){\n          await this.$store.dispatch(model + \"/list\")\n            // .then(response =>{\n              this[model] = await this.$store.getters[model + \"/list\"]\n              console.log(this[model])\n            // })\n        }else{\n          this[model] =  this.$store.getters[model + \"/list\"]\n        }\n      },\n\n      makeNew(model){\n        if(this.form[model + '_id'] === 'new'){\n          let variable = 'createNew' +  model.charAt(0).toUpperCase() + model.slice(1);;\n          this[variable] = true;\n          // alert(\"create new brand!\");\n        }\n      },\n\n      setImage(image){\n        this.$set(this.form, image.id, image.file.id);\n        // this.form[image.id] = image.file.id; \n        this.$set(this.image, image.id, image.file.name);\n        // this.image[image.id] = image.file.name;\n      }\n    },\n\n    computed:{\n      loading(){\n        \n        // return typeof this.item.length;\n        if(this.newItem === false){\n          if(this.item.id == null || typeof this.item.id == 'undefined'){\n            return true;\n          }\n        }\n        return false;\n      }\n    },\n\n    mounted(){\n      let brandSet = false;\n      let independentSet = false;\n      for (let i = 0; i < this.itemInfo.length; i++){\n        // console.log('Looping through item info in mounted');\n        // console.log(this.itemInfo[i]);\n        if(this.itemInfo[i].fieldType == \"brandSelect\" && brandSet === false){\n          console.log('setting up brands array in mounted');\n          this.setSelectOptions('brands');\n          brandSet = true;\n        }\n        if(this.itemInfo[i].fieldType == \"independentSelect\" && independentSet === false){\n          console.log('setting up independents array in mounted');\n          this.setSelectOptions('independents');\n          independentSet = true;\n        }\n      }\n    },\n\n    watch: {\n      loading(loading){\n        if(loading===false){\n          this.setForm();\n        }\n      },\n      validate(validate){\n        if(validate===true){\n          this.validateItem();\n        }\n      }\n    }\n\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n  .md-error{\n    bottom: -8px;\n    color: red;\n    font-size: smaller;\n  }\n</style>\n\n<style lang=\"scss\">\n    .md-layout-item{\n      padding-left: 0px;\n      padding-right: 0px;\n    }\n</style>"]}]}