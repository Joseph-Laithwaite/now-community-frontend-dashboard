{"remainingRequest":"/Users/josephlaithwaite/Documents/VueLearning/vue-material-dashboard-laravel-master/vue-material-dashboard/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/josephlaithwaite/Documents/VueLearning/vue-material-dashboard-laravel-master/vue-material-dashboard/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/josephlaithwaite/Documents/VueLearning/vue-material-dashboard-laravel-master/vue-material-dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/josephlaithwaite/Documents/VueLearning/vue-material-dashboard-laravel-master/vue-material-dashboard/src/pages/FixedPlugin.vue?vue&type=template&id=201e2153&","dependencies":[{"path":"/Users/josephlaithwaite/Documents/VueLearning/vue-material-dashboard-laravel-master/vue-material-dashboard/src/pages/FixedPlugin.vue","mtime":1598060882000},{"path":"/Users/josephlaithwaite/Documents/VueLearning/vue-material-dashboard-laravel-master/vue-material-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josephlaithwaite/Documents/VueLearning/vue-material-dashboard-laravel-master/vue-material-dashboard/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/josephlaithwaite/Documents/VueLearning/vue-material-dashboard-laravel-master/vue-material-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josephlaithwaite/Documents/VueLearning/vue-material-dashboard-laravel-master/vue-material-dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}