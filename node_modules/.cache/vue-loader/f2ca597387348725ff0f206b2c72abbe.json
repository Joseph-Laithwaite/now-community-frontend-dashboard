{"remainingRequest":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/src/pages/Dashboard/Pages/Login.vue?vue&type=style&index=0&id=40348ea2&scoped=true&lang=css&","dependencies":[{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/src/pages/Dashboard/Pages/Login.vue","mtime":1606331743147},{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5sb2dpbi1maXgtcGFnZSB7CiAgcGFkZGluZy1ib3R0b206IDdlbTsKICBwYWRkaW5nLXRvcDogNGVtOwp9Cg=="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4HA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/pages/Dashboard/Pages","sourcesContent":["<template>\n  <div class=\"md-layout text-center login-fix-page\">\n    <div class=\"md-layout-item md-size-100\">\n      <div class=\"text-center\">\n        <h3>Log in to Vue Material Dashboard Laravel Live Preview</h3>\n        <p>\n          Log in to see how you can go from frontend to fullstack in an instant\n          with an API-based Laravel backend.\n        </p>\n      </div>\n      <div class=\"text-center\" style=\"margin-bottom: 32px;\">\n        <h5><strong>You can log in with:</strong></h5>\n        <div>Username <b>admin@material.com</b> Password <b>secret</b></div>\n      </div>\n    </div>\n\n    <div\n      class=\"md-layout-item md-size-33 md-medium-size-50 md-small-size-70 md-xsmall-size-100\"\n    >\n      <form @submit.prevent=\"login\">\n        <login-card header-color=\"green\">\n          <h4 slot=\"title\" class=\"title\">Log in</h4>\n          <md-button\n            slot=\"buttons\"\n            ref=\"#facebook\"\n            class=\"md-just-icon md-simple md-white\"\n          >\n            <i class=\"fab fa-facebook-square\"></i>\n          </md-button>\n          <md-button\n            slot=\"buttons\"\n            href=\"#twitter\"\n            class=\"md-just-icon md-simple md-white\"\n          >\n            <i class=\"fab fa-twitter\"></i>\n          </md-button>\n          <md-button\n            slot=\"buttons\"\n            href=\"#google\"\n            class=\"md-just-icon md-simple md-white\"\n          >\n            <i class=\"fab fa-google-plus-g\"></i>\n          </md-button>\n          <p slot=\"description\" class=\"description\">Or Be Classical</p>\n          <md-field\n            class=\"form-group md-invalid\"\n            slot=\"inputs\"\n            style=\"margin-bottom: 28px\"\n          >\n            <md-icon>username</md-icon>\n            <label>Email...</label>\n            <md-input v-model=\"username\" type=\"username\" />\n            <validation-error :errors=\"apiValidationErrors.username\" />\n          </md-field>\n          <md-field class=\"form-group md-invalid\" slot=\"inputs\">\n            <md-icon>lock_outline</md-icon>\n            <label>Password...</label>\n            <md-input v-model=\"password\" type=\"password\" />\n          </md-field>\n          <md-button\n            slot=\"footer\"\n            type=\"submit\"\n            class=\"md-simple md-success md-lg\"\n          >\n            Lets Go\n          </md-button>\n        </login-card>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { LoginCard, ValidationError } from \"@/components\";\nimport formMixin from \"@/mixins/form-mixin\";\n\nexport default {\n  components: {\n    LoginCard,\n    ValidationError,\n  },\n  mixins: [formMixin],\n  computed: {\n    isAuthenticated: function() {\n      return this.$store.getters.isAuthenticated();\n    },\n  },\n  data: () => ({\n    username: \"may.bednar@example.org\",\n    password: \"password\",\n  }),\n  methods: {\n    async login() {\n      const \n      user = {\n            username: this.username,\n            password: this.password,\n      };\n\n      const requestOptions = {\n        headers: {\n          Accept: \"application/vnd.api+json\",\n          \"Content-Type\": \"application/vnd.api+json\",\n        },\n      };\n\n      try {\n        await this.$store.dispatch(\"login\", { user, requestOptions });\n      } catch (e) {\n        await this.$store.dispatch(\"alerts/error\", \"Invalid credentials!\");\n        this.setApiValidation(e.response.data.errors);\n      }\n\n      try{\n        await this.$store.dispatch(\"profile/myPermissions\");\n      }\n      catch{\n        await this.$store.dispatch(\"alerts/error\", \"unauthroized for dashboard\");\n      }\n    },\n  },\n};\n</script>\n<style scoped>\n.login-fix-page {\n  padding-bottom: 7em;\n  padding-top: 4em;\n}\n</style>\n\n"]}]}