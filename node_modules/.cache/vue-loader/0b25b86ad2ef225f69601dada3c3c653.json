{"remainingRequest":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/src/pages/Dashboard/Locations/FullScreenLocation.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/src/pages/Dashboard/Locations/FullScreenLocation.vue","mtime":1606826520402},{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI21hcCB7CiAgaGVpZ2h0OiBjYWxjKDYwdmggLSA3MHB4KTsKICBtYXJnaW4tdG9wOiA3MHB4OwogIHdpZHRoOiAxMDAlOwp9Cg=="},{"version":3,"sources":["FullScreenLocation.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgGA;AACA;AACA;AACA;AACA","file":"FullScreenLocation.vue","sourceRoot":"src/pages/Dashboard/Locations","sourcesContent":["<template>\n  <span class=\"md-layout md-gutter md-alignment-space-between md-layout-item\">\n    <md-field class=\"md-layout-item\">\n      <label>Latitude</label>\n      <md-input type=\"number\" v-model=\"point.lat\"></md-input>\n    </md-field>\n    <md-field class=\"md-layout-item\">\n      <label>Longitude</label>\n      <md-input type=\"number\" v-model=\"point.lng\"></md-input>\n    </md-field>\n    <md-button class=\"md-layout-item\" @click=\"initMap\">Set Marker</md-button>\n    <br>\n    <div id=\"map\"></div>\n  </span>\n</template>\n\n<script>\n\nimport { API_KEY } from \"./API_KEY\";\nimport { Loader, LoaderOptions } from \"google-maps\";\n\nconst loader = new Loader(API_KEY);\n\nexport default {\n  props:{\n    pin:{type:Object, \n    // default:function(){return{lat:0, lng:0}}\n    }\n  },\n  data() {\n    return {\n      nav: null,\n      myLatlng: null,\n      point:{\n        lat:null, \n        lng:null,\n      },\n      centerMap:{\n        lat:50.79574417179238, \n        lng:-1.0767492719388176\n      },\n      map:null,\n    };\n  },\n  methods:{\n    initMap(){\n      if(typeof this.point !== 'undefined' && this.point.lat !== null && this.point.lng !== null){\n        this.centerMap=this.point;\n        // this.point=this.pin;\n      }\n      this.centerMap.lat=parseFloat(this.centerMap.lat);\n      this.centerMap.lng=parseFloat(this.centerMap.lng);\n      const center = this.centerMap;\n      \n      this.point.lat=parseFloat(this.point.lat);\n      this.point.lng=parseFloat(this.point.lng);\n\n      const point= this.point;\n      // const pointLabel = this.point.label;\n      loader.load()\n      .then( function(google) {\n        // const myPoint = new google.maps.LatLng(point.lat, point.lng);\n\n        const map = new google.maps.Map(document.getElementById(\"map\"), {\n          zoom: 13,\n          center: center,\n        });\n        const marker = new google.maps.Marker({\n          position: point,\n          label: point.label,\n          map: map,\n        });\n      });\n    },\n  },\n\n  mounted() {\n    // if(typeof this.pin !== 'undefined' && this.pin.lat !== null && this.pin.lng !== null){\n    //   this.centerMap=this.pin;\n    //   this.point=this.pin;\n    // }\n    this.initMap();\n    // this.point=this.pin;\n      // this.initMap();\n  },\n  watch:{\n    point(point){\n      // if(typeof this.pin !== 'undefined' && this.pin.lat !== null && this.pin.lng !== null){\n      //   this.centerMap=this.pin;\n      //   this.point=this.pin;\n      // }\n    }\n  }\n}\n</script>\n<style>\n#map {\n  height: calc(60vh - 70px);\n  margin-top: 70px;\n  width: 100%;\n}\n</style>\n"]}]}