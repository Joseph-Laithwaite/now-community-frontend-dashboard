{"remainingRequest":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/src/components/ImageDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/src/components/ImageDialog.vue","mtime":1607086573417},{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ImageDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"ImageDialog.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<md-dialog \n  :md-active=showDialog\n  @md-clicked-outside=\"$emit('close-image-dialog')\"\n  :md-click-outside-to-close=\"false\"\n  >\n    <md-dialog-title>{{label}}</md-dialog-title>\n    <md-dialog-content class=\"md-scrollbar\">\n      <div class=\"md-layout md-alignment-top-center\">\n        <div>\n          <image-upload \n            @new-file=\"SetFile\"\n            :imageURL=\"info.url\"\n          ></image-upload>\n        </div>\n      </div>\n      <form @submit.prevent=\"ImageUpload\">\n        <div v-for=\"fileInput in fileInputs\" :key=\"fileInput.id\">\n          <md-field  v-if=\"fileInput.fieldOptions.disabled !== true || typeof fileInput.fieldOptions.disabled == 'undefined'\">\n            <label :for=\"id + '_' + fileInput.id\" v-text=\"fileInput.label\"></label>\n            <md-input \n              :id=\"id + '_' + fileInput.id\" \n              :name=\"id + ' ' + fileInput.label\"\n              :type=\"fileInput.fieldOptions.type\"\n              :disabled=\"fileInput.fieldOptions.disabled\"\n              :required=\"fileInput.fieldOptions.required\"\n              v-model=\"form[fileInput.id]\"\n            />\n          </md-field>\n        </div>\n        <div v-if=\"form.file!==undefined\">\n          <md-list :md-expand-single=\"true\">\n            <md-list-item md-expand>\n              <md-icon >info</md-icon>\n              <div class=\"md-list-item-text\">\n              Info\n              </div>\n              <md-list slot=\"md-expand\">\n\n                <div v-for=\"fileInput in fileInputs\" :key=\"fileInput.id\">\n                  <div v-if=\"form[fileInput.id] !== '' && fileInput.fieldOptions.disabled === true\">\n                    <md-list-item class=\"md-inset\">\n                      <md-field>\n                        <label :for=\"id + '_' + fileInput.id\" v-text=\"fileInput.label\"></label>\n                        <md-input \n                          :id=\"id + '_' + fileInput.id\" \n                          :name=\"id + ' ' + fileInput.label\"\n                          :type=\"fileInput.fieldOptions.type\"\n                          :disabled=\"fileInput.fieldOptions.disabled\"\n                          :required=\"fileInput.fieldOptions.required\"\n                          v-model=\"form[fileInput.id]\"\n                        />\n                      </md-field>\n                    </md-list-item>              \n                  </div>\n                </div>\n\n                <div v-for=\"infoField in fileInfo\" :key=\"infoField.id\">\n                  <md-list-item class=\"md-inset\" v-if=\"info[infoField.id] !== ''\">\n                    <md-field>\n                      <label :for=\"infoField.id\" v-text=\"infoField.label\"></label>\n                      <md-input\n                        :id=\"infoField.id\" \n                        :name=\"infoField.label\"\n                        :type=\"infoField.fieldOptions.type\"\n                        :disabled=\"true\"\n                        :required=\"false\"\n                        v-model=\"info[infoField.id]\"\n                      />\n                    </md-field>\n                  </md-list-item>              \n                </div>    \n              </md-list>\n            </md-list-item>\n          </md-list>\n        </div>\n        </form>\n  </md-dialog-content>\n  <md-dialog-actions>\n    <div class=\"md-layout md-alignment-top-center md-gutter\" style=\"margin-right: 0px;\">\n      <md-button class=\"md-primary md-layout-item md-size-45\" \n        @click=\"UploadFile\"\n      >\n        {{`${newImage ? 'Upload':'Update'}`}}\n      </md-button>\n      <md-button class=\"md-accent md-layout-item md-size-45\" \n        @click=\"$emit('close-image-dialog')\"\n      >\n        Close\n      </md-button>\n    </div>\n  </md-dialog-actions>\n</md-dialog>\n  \n</template>\n\n<script>\nimport ImageUpload from './ImageUpload.vue'\n\nimport Axios from 'axios';\n\nconst url = process.env.VUE_APP_API_BASE_URL;\n\nexport default {\n  name: \"ImageDialog\",\n  components: {\n    ImageUpload,\n  },\n  data: () => ({\n    newImage:true,\n    form: {\n      file: undefined,\n      fileName:'',\n      fileDescription:'',\n      fileSize: '',\n      fileType: '',\n    },\n    info: {\n      id: '',\n      url: '',\n      addedBy: '',\n      dateAdded: '',\n    },\n    uploadProgress:0,\n  }),\n  props:{\n    label: {default:'Image'},\n    id: {default:'image'},\n    showDialog: {default:false},\n    passedFile: {default: undefined},\n    imageID: {default: undefined},\n    model: {default:'App\\\\Models\\\\Independent'},\n    fileInputs:{\n      type: [Array, Object], \n        default:()=>\n        [\n          {\n            label: \"File Name\",\n            id: \"fileName\",\n            fieldOptions:{\n              type: 'text',\n              required: true,\n            },\n            // validationsFunctions: {required, text},\n          },\n          {\n            label: \"File Description\",\n            id: \"fileDescription\",\n            fieldOptions:{\n              type: 'text',\n            },\n            // validationsFunctions: {text},\n          },\n          {\n            label: \"File Size\",\n            id: \"fileSize\",\n            fieldOptions:{\n              type: 'text',\n              required: true,\n              disabled: true,\n              fileSize: true\n            },\n            // validationsFunctions: {required, integer},\n          },\n          {\n            label: \"File Type\",\n            id: \"fileType\",\n            fieldType: 'input',\n            fieldOptions:{\n              type: 'text',\n              required: true,\n              disabled: true,\n            },\n            // validationsFunctions: {required, text},\n          },\n        ]\n    },\n    fileInfo: {\n        type: [Array, Object], \n        default:()=>\n        [\n          {\n            label: \"URL\",\n            id: \"url\",\n            fieldType: 'input',\n            fieldOptions:{\n              type: 'text',\n              // required: true,\n              disabled: true,\n            },\n            // validationsFunctions: {required, text},\n          },\n          {\n            label: \"Added By\",\n            id: \"addedBy\",\n            fieldType: 'input',\n            fieldOptions:{\n              type: 'text',\n              // required: true,\n              disabled: true,\n            },\n            // validationsFunctions: {required, text},\n          },\n          {\n            label: \"Date Added\",\n            id: \"dateAdded\",\n            fieldType: 'input',\n            fieldOptions:{\n              type: 'text',\n              // required: true,\n              disabled: true,\n            },\n            // validationsFunctions: {required, text},\n          },\n          {\n            label: \"ID\",\n            id: \"id\",\n            fieldType: 'input',\n            fieldOptions:{\n              type: 'text',\n              // required: true,\n              disabled: true,\n            },\n            // validationsFunctions: {required, text},\n          },\n        ]\n      }\n  },\n  methods:{\n    SetFile(file){\n      this.ClearForm();\n      this.form.file = file;\n      this.form.fileSize = (file.size/1000) + ' kb';\n      this.form.fileType = file.type;\n      try{\n        this.form.fileName = file.name.replace(/\\.[^/.]+$/, \"\");\n      }\n      catch{\n\n        console.log('no file name found');\n      }\n    },\n\n    SetPassedFile(file){\n      try{\n        this.form.file=file;\n        this.form.fileName = file.name;\n        this.form.fileDescription = file.description;\n        this.form.fileSize = file.size;\n        this.form.fileType = file.type;\n        this.info.id = file.id;\n        this.info.addedBy = file.first_name + ' ' + file.last_name;\n        this.info.url = file.url;\n        this.info.dateAdded = file.created_at;\n        this.newImage=false;\n        let fileToReturn = new Object;\n        fileToReturn.file = file;\n        fileToReturn.id = this.id;\n        this.$emit('file-uploaded', fileToReturn);\n      }\n      catch{\n        this.$store.dispatch(\"alerts/error\", 'passed file not found');\n        this.newImage=true;\n      }\n    },\n\n    SetFileFromID(imageID){\n      if(typeof imageID!=='null' && imageID!==null){\n        Axios.get(`${url}/images/${imageID}`)\n        .then(response => {\n          console.log(\"Response from image get\");\n          console.log(response);\n          let file= response.data.message;\n          this.form.file = file;\n          this.form.fileName = file.name;\n          this.form.fileDescription = file.description;\n          this.form.fileSize = (file.size/1000) + ' kb';\n          this.form.fileType = file.type;\n          this.info.id = file.id;\n          this.info.addedBy = file.user.first_name + ' ' + file.user.last_name;\n          this.info.url = 'http://nowcommunity.test' + file.url;\n          this.info.dateAdded = file.created_at;\n          this.newImage=false;\n          // this.$emit('file-set', file.name);\n          let fileToReturn = new Object;\n          fileToReturn.file = file;\n          fileToReturn.id = this.id;\n          this.$emit('file-uploaded', fileToReturn);\n        })\n        .catch(error=>{\n          this.$store.dispatch(\"alerts/error\", error.message);\n          this.newImage = true;\n        })\n      }else{\n        this.newImage = true;\n      }\n    },\n\n    UploadFile(){\n      // console.log('Upload file independent id: ' + this.$store.getters[\"profile/currentPermissions\"].independent.id);\n      const bodyFormData = new FormData();\n        bodyFormData.append('image', this.form.file);\n        bodyFormData.append('name', this.form.fileName);\n        bodyFormData.append('imageable_type', this.model);\n        bodyFormData.append('imageable_id', this.$store.getters[\"profile/currentPermissions\"].independent.id);\n        bodyFormData.append('description', this.form.fileDescription);\n        bodyFormData.append('size', parseInt(Number(this.form.fileSize.split(\" kb\")[0])*1000));\n        bodyFormData.append('type', this.form.fileType);\n\n      Axios.post(`${url}/images`, bodyFormData, {\n        onUploadProgress: progressEvent => {\n          this.uploadProgress = progressEvent.loaded / progressEvent.total;\n          console.log(progressEvent.loaded / progressEvent.total)\n        }\n      })\n      .then(response => {\n        console.log(\"Response from image post\");\n        console.log(response);\n        let file= response.data.data;\n        this.form.file = file;\n        // this.form.fileName = file.name;\n        // this.form.description = file.description;\n        // this.form.fileSize = (file.size/1000).toFixed(1) + ' kb';\n        // this.form.fileType = file.type;\n        this.info.id = file.id;\n        this.info.addedBy = file.user.first_name + ' ' + file.user.last_name;\n        this.info.url = 'http://nowcommunity.test' + file.url;\n        this.info.dateAdded = file.created_at;\n        this.newImage = false;\n        let fileToReturn = new Object;\n        fileToReturn.file = file;\n        fileToReturn.id = this.id;\n        this.$emit('file-uploaded', fileToReturn);\n      })\n      .catch(error=>{\n        this.$store.dispatch(\"alerts/error\", error.message);\n        this.ClearForm\n      })\n    },\n\n    ClearForm(){\n      this.form.file = undefined;\n      this.form.fileName = '';\n      this.form.fileDescription = '';\n      this.form.fileSize = '';\n      this.form.fileType = '';\n      this.info.id = '';\n      this.info.addedBy = '';\n      this.info.url = '';\n      this.info.dateAdded = '';\n    }\n  },\n  mounted(){\n    if(typeof this.passedFile !== 'undefined' && this.passedFile !== null){\n      this.SetPassedFile(this.passedFile);\n    }\n    else if(typeof this.imageID !== 'undefined'&& this.imageID !== null){\n      this.SetFileFromID(this.imageID);\n    }\n    else{\n      this.ClearForm();\n    }\n  },\n  watch:{\n    passedFile(passedFile){\n      this.SetPassedFile(passedFile);\n    },\n    imageID(imageID){\n      this.SetFileFromID(imageID);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.viewport {\n  width: 320px;\n  max-width: 100%;\n  display: inline-block;\n  vertical-align: top;\n  overflow: auto;\n  border: 1px solid rgba(#000, 0.12);\n}\n.md-dialog-container{\n  min-width:80%;\n}\n.md-dialog-content{\n  margin-top:-50px;\n}\n.md-dialog-actions{\n  padding-left: 8px;\n}\n</style>\n"]}]}