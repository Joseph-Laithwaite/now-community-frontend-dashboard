{"remainingRequest":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/babel-loader/lib/index.js!/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/src/components/InputBlocks/AddressLookup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/src/components/InputBlocks/AddressLookup.vue","mtime":1606753971307},{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["AddressLookup.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <form @submit.prevent=\"lookUpAdress\">\n        <md-field>\n            <label>Postcode</label>\n            <md-input \n                type=\"text\" \n                :required=\"true\"\n                id=\"postcode\"\n                name=\"postcode\"\n                autocomplete=\"on\"\n                v-model=\"postcode\"\n            ></md-input>\n        </md-field>\n        <md-field>\n            <label>Building name or number</label>\n            <md-input \n                type=\"text\"\n                :required=\"false\" \n                id=\"street-address\"\n                name=\"street-address\"\n                autocomplete=\"on\"\n                v-model=\"house\"\n                ></md-input>\n        </md-field>\n        <span class=\"md-layout-item md-size-100\">\n            <md-button class=\"md-primary\" type=submit>\n                Lookup your address\n            </md-button>\n            <md-button @click=\"showInputs=true\">\n                Or enter manually\n            </md-button>\n        </span>\n        <md-field v-if=\"addressOptions.length>1\">\n            <md-select v-model=\"selectedAddress\">\n                <md-option \n                    v-for=\"addressOption in addressOptions\" \n                    :key=\"addressOption\" \n                    :value=\"addressOption\" \n                    v-text=\"addressOption.substring(0, addressOption.indexOf(', ,'))\"\n                ></md-option>\n            </md-select>\n        </md-field>\n        <span v-if=\"showInputs\">\n            <nc-form \n                :newItem=\"fullAddress.line1===''\"\n                :item=\"fullAddress\"\n                :itemInfo=\"addressFieldInfo\"\n                :validate=\"validateNow\"\n                @validation-success=\"validateNow=false\"\n                @validation-failed=\"validateNow=false\"\n            ></nc-form>\n        </span>\n        <full-screen-location v-if=\"showMap\" :point=latLong></full-screen-location>\n    </form>\n</template>\n\n<script>\nimport Axios from 'axios';\nimport ncForm from './ncForm.vue';\n\nimport { validationMixin } from 'vuelidate'\n  import {\n    required,\n    minLength,\n  } from 'vuelidate/lib/validators'\n\nimport FullScreenLocation from '../../pages/Dashboard/Locations/FullScreenLocation.vue';\n\nconst api = process.env.ADDRESS_LOOKUP_API_KEY;\nconst url = process.env.ADDRESS_LOOKUP_BASE_URL;\n\nexport default {\n  components: { ncForm, FullScreenLocation },\n    name:'address-lookup',\n    \n    props:{\n        lookupApi:{default:'BIK77c9oQk6D6iLaeVxF9Q29351'},\n        lookupBaseUrl:{default:'https://api.getaddress.io/find/'},\n    },\n    data(){\n        return{\n            validateNow:false,\n            postcode:null,\n            house:null,\n            addressOptions:[],\n            selectedAddress:null,\n            showInputs:false,\n            fullAddress:{\n                line1:'',\n                line2:'',\n                line3:'',\n                townCity:'',\n                county:'',\n            },\n            latLong:{\n                lat:null,\n                lng:null,\n            },\n            showMap:false,\n            addressFieldInfo:[\n                {\n                    label: \"Line 1\",\n                    id: \"line1\",\n                    fieldType: 'input',\n                    fieldOptions:{\n                        autocomplete:'on',\n                        spellcheck:'off',\n                        type:'text',\n                        required: true,\n                        disabled: false,\n                    },\n                    validationsFunctions: {required},\n                },\n                {\n                    label: \"Line 2\",\n                    id: \"line2\",\n                    fieldType: 'input',\n                    fieldOptions:{\n                        autocomplete:'on',\n                        spellcheck:'off',\n                        type:'text',\n                        required: false,\n                        disabled: false,\n                    },\n                    validationsFunctions: {},\n                },\n                {\n                    label: \"Line 3\",\n                    id: \"line3\",\n                    fieldType: 'input',\n                    fieldOptions:{\n                        autocomplete:'on',\n                        spellcheck:'off',\n                        type:'text',\n                        required: false,\n                        disabled: false,\n                    },\n                    validationsFunctions: {},\n                },\n                {\n                    label: \"Town or City\",\n                    id: \"townCity\",\n                    fieldType: 'input',\n                    fieldOptions:{\n                        autocomplete:'on',\n                        spellcheck:'off',\n                        type:'text',\n                        required: true,\n                        disabled: false,\n                    },\n                    validationsFunctions: {required},\n                },\n                {\n                    label: \"County\",\n                    id: \"county\",\n                    fieldType: 'input',\n                    fieldOptions:{\n                        autocomplete:'on',\n                        spellcheck:'off',\n                        type:'text',\n                        required: true,\n                        disabled: false,\n                    },\n                    validationsFunctions: {required},\n                }\n            ],\n        }\n    },\n    methods:{\n        async lookUpAdress(){\n            if(this.postcode!==null && this.postcode!==''){\n                let lookupURL = '/' +  this.postcode.replace(/\\s/g, \"\");\n                if(this.house!==null && this.house!==''){\n                    lookupURL = lookupURL + '/' +  encodeURI(this.house);\n                }\n                try{\n                    const response = await Axios({\n                        baseURL: this.lookupBaseUrl,\n                        url: lookupURL,\n                        params: {\n                            'api-key': this.lookupApi\n                        },\n                        method: 'get',\n                    })\n                    console.log(response.data);\n                    console.log(response.status);\n                    console.log(response.statusText);\n                    this.addressOptions = await response.data.addresses.filter((x, i, a) => a.indexOf(x) == i);\n                    console.log('Adress options array length is: '+this.addressOptions.length)\n                    this.latLong.lat = response.data.latitude;\n                    this.latLong.lng = response.data.longitude;\n                    if(this.addressOptions.length == 1){\n                        this.selectedAddress = await this.addressOptions[0];\n                    }\n                } catch (error) {\n                    console.log(\"Error caught\");\n                    console.log(error);\n                    console.log(error.response);\n                    this.$store.dispatch(\"alerts/error\", 'Sorry no addresses found with the given combination');\n                }\n\n                // Axios.get(lookupURL + query)\n                //     .then(response=>{\n                //     this.addressOptions = response.data.addresses;\n                //     })\n                //     .catch(error=>{\n                //         console.log(error.data);\n                //         console.log(error.status);\n                //         console.log(error.statusText);\n                //         console.log(error.headers);\n                //         console.log(error.config);\n\n                //     })\n            }else{\n                this.$store.dispatch(\"alerts/error\", 'Sorry no valid postcode has been given, try again or enter manually bellow');\n            }\n            // return \"?perPagePaginate=\" + this.perPageSelected + '&page=' + this.currentSelectedPage + '&nameQuery=' + this.search\n        },\n        setAddress(selectedAddress){\n            let spitAddress = selectedAddress.split(',');\n            this.fullAddress.line1=spitAddress[0].trim();\n            this.fullAddress.line2=spitAddress[1].trim();\n            this.fullAddress.line3=spitAddress[2].trim();\n            // this.fullAddress.locality=spitAddress[4];\n            this.fullAddress.townCity=spitAddress[5].trim();\n            this.fullAddress.county=spitAddress[6].trim();\n            this.showInputs=true;\n        }\n    },\n    watch:{\n        selectedAddress(selectedAddress){\n            if(selectedAddress!==null && selectedAddress!==''){\n                this.setAddress(selectedAddress)\n                this.showMap=true;\n            }\n        }\n    }\n}\n</script>"],"sourceRoot":"src/components/InputBlocks"}]}