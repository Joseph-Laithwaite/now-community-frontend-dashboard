{"remainingRequest":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/babel-loader/lib/index.js!/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/src/pages/Dashboard/Examples/UserProfile/EditUserCard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/src/pages/Dashboard/Examples/UserProfile/EditUserCard.vue","mtime":1603105440749},{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgdmFsaWRhdGlvbk1peGluIH0gZnJvbSAndnVlbGlkYXRlJzsKaW1wb3J0IHsgcmVxdWlyZWQsIGVtYWlsLCBtaW5MZW5ndGgsIG1heExlbmd0aCwgYWxwaGFOdW0gfSBmcm9tICd2dWVsaWRhdGUvbGliL3ZhbGlkYXRvcnMnOwppbXBvcnQgeyBWYWxpZGF0aW9uRXJyb3IgfSBmcm9tICJAL2NvbXBvbmVudHMiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ2VkaXQtdXNlci1jYXJkJywKICBtaXhpbnM6IFt2YWxpZGF0aW9uTWl4aW5dLAogIC8vIGNvbXBvbmVudHM6IHtWYWxpZGF0aW9uRXJyb3J9LAogIHByb3BzOiB7CiAgICB1c2VyOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogbnVsbAogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGZvcm06IHsKICAgICAgICBpZDogbnVsbCwKICAgICAgICBmaXJzdF9uYW1lOiBudWxsLAogICAgICAgIGxhc3RfbmFtZTogbnVsbCwKICAgICAgICB1c2VybmFtZTogbnVsbCwKICAgICAgICBkb2I6IG51bGwsCiAgICAgICAgZW1haWw6IG51bGwKICAgICAgfSwKICAgICAgc2VydmVyVmFsaWRhdGlvbkVycm9yczogewogICAgICAgIGVtYWlsOiBbXSwKICAgICAgICBmaXJzdF9uYW1lOiBbXSwKICAgICAgICBsYXN0X25hbWU6IFtdLAogICAgICAgIHVzZXJuYW1lOiBbXQogICAgICB9LAogICAgICB1c2VyU2F2ZWQ6IGZhbHNlLAogICAgICBzZW5kaW5nOiBmYWxzZSwKICAgICAgbGFzdFVzZXI6IG51bGwKICAgIH07CiAgfSwKICB2YWxpZGF0aW9uczogewogICAgZm9ybTogewogICAgICBmaXJzdF9uYW1lOiB7CiAgICAgICAgcmVxdWlyZWQ6IHJlcXVpcmVkLAogICAgICAgIG1pbkxlbmd0aDogbWluTGVuZ3RoKDMpCiAgICAgIH0sCiAgICAgIGxhc3RfbmFtZTogewogICAgICAgIHJlcXVpcmVkOiByZXF1aXJlZCwKICAgICAgICBtaW5MZW5ndGg6IG1pbkxlbmd0aCgzKQogICAgICB9LAogICAgICBlbWFpbDogewogICAgICAgIHJlcXVpcmVkOiByZXF1aXJlZCwKICAgICAgICBlbWFpbDogZW1haWwKICAgICAgfSwKICAgICAgdXNlcm5hbWU6IHsKICAgICAgICByZXF1aXJlZDogcmVxdWlyZWQsCiAgICAgICAgYWxwaGFOdW06IGFscGhhTnVtCiAgICAgIH0KICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGdldFZhbGlkYXRpb25DbGFzczogZnVuY3Rpb24gZ2V0VmFsaWRhdGlvbkNsYXNzKGZpZWxkTmFtZSkgewogICAgICB2YXIgZmllbGQgPSB0aGlzLiR2LmZvcm1bZmllbGROYW1lXTsKCiAgICAgIGlmIChmaWVsZCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAnbWQtaW52YWxpZCc6IGZpZWxkLiRpbnZhbGlkICYmIGZpZWxkLiRkaXJ0eQogICAgICAgIH07CiAgICAgIH0KICAgIH0sCiAgICBjbGVhckZvcm06IGZ1bmN0aW9uIGNsZWFyRm9ybSgpIHsKICAgICAgdGhpcy4kdi4kcmVzZXQoKTsKICAgICAgdGhpcy5mb3JtLmZpcnN0X25hbWUgPSBudWxsOwogICAgICB0aGlzLmZvcm0ubGFzdF9uYW1lID0gbnVsbDsKICAgICAgdGhpcy5mb3JtLnVzZXJuYW1lID0gbnVsbDsKICAgICAgdGhpcy5mb3JtLmRvYiA9IG51bGw7CiAgICAgIHRoaXMuZm9ybS5lbWFpbCA9IG51bGw7CiAgICB9LAogICAgc2F2ZVVzZXI6IGZ1bmN0aW9uIHNhdmVVc2VyKCkgewogICAgICB0aGlzLnNlbmRpbmcgPSB0cnVlOwoKICAgICAgaWYgKHRoaXMubmV3VXNlcikgewogICAgICAgIHRoaXMuY3JlYXRlVXNlcigpOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMudXBkYXRlVXNlcigpOwogICAgICB9IC8vIEluc3RlYWQgb2YgdGhpcyB0aW1lb3V0LCBoZXJlIHlvdSBjYW4gY2FsbCB5b3VyIEFQSQogICAgICAvLyB3aW5kb3cuc2V0VGltZW91dCgoKSA9PiB7CiAgICAgIC8vICAgLy8gdGhpcy5sYXN0VXNlciA9IGAke3RoaXMuZm9ybS5maXJzdF9uYW1lfSAke3RoaXMuZm9ybS5sYXN0X25hbWV9YAogICAgICAvLyAgIHRoaXMudXNlclNhdmVkID0gdHJ1ZQogICAgICAvLyAgIHRoaXMuc2VuZGluZyA9IGZhbHNlCiAgICAgIC8vICAgLy8gdGhpcy5jbGVhckZvcm0oKQogICAgICAvLyB9LCAxNTAwKQoKICAgIH0sCiAgICB2YWxpZGF0ZVVzZXI6IGZ1bmN0aW9uIHZhbGlkYXRlVXNlcigpIHsKICAgICAgdGhpcy4kdi4kdG91Y2goKTsKCiAgICAgIGlmICghdGhpcy4kdi4kaW52YWxpZCkgewogICAgICAgIHRoaXMuc2F2ZVVzZXIoKTsKICAgICAgfQogICAgfSwKICAgIHVwZGF0ZVVzZXI6IGZ1bmN0aW9uIHVwZGF0ZVVzZXIoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgidXNlcnMvdXBkYXRlIiwgdGhpcy5mb3JtKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIF90aGlzLiRzdG9yZS5kaXNwYXRjaCgiYWxlcnRzL3N1Y2Nlc3MiLCAiUHJvZmlsZSB1cGRhdGVkIHN1Y2Nlc3NmdWxseS4iKTsKCiAgICAgICAgX3RoaXMudXNlclNhdmVkID0gdHJ1ZTsKICAgICAgICBfdGhpcy5zZW5kaW5nID0gZmFsc2U7IC8vRW1pdCB3aXRoIG5ldyB1c2VyIGZvciBwcm9wIHRvIGJlIHJlIGVzdGFibGlzaGVkCiAgICAgICAgLy90aGlzLnVzZXIgPSBhd2FpdCB0aGlzLiRzdG9yZS5nZXR0ZXJzWyJ1c2Vycy91c2VyIl0KICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGUpIHsKICAgICAgICBjb25zb2xlLmxvZyhlKTsKCiAgICAgICAgX3RoaXMuJHN0b3JlLmRpc3BhdGNoKCJhbGVydHMvZXJyb3IiLCAiT29wcywgc29tZXRoaW5nIHdlbnQgd3JvbmchICIgKyBlLm1lc3NhZ2UpOwoKICAgICAgICBfdGhpcy5zZW5kaW5nID0gZmFsc2U7CgogICAgICAgIGlmIChlLmVycm9ycy5lbWFpbCkgewogICAgICAgICAgX3RoaXMuc2VydmVyVmFsaWRhdGlvbkVycm9ycy5lbWFpbCA9IGUuZXJyb3JzLmVtYWlsOwogICAgICAgIH0KCiAgICAgICAgOwoKICAgICAgICBpZiAoZS5lcnJvcnMuZmlyc3RfbmFtZSkgewogICAgICAgICAgX3RoaXMuc2VydmVyVmFsaWRhdGlvbkVycm9ycy5maXJzdF9uYW1lID0gZS5lcnJvcnMuZmlyc3RfbmFtZTsKICAgICAgICB9CgogICAgICAgIDsKCiAgICAgICAgaWYgKGUuZXJyb3JzLmxhc3RfbmFtZSkgewogICAgICAgICAgX3RoaXMuc2VydmVyVmFsaWRhdGlvbkVycm9ycy5maXJzdF9uYW1lID0gZS5lcnJvcnMubGFzdF9uYW1lOwogICAgICAgIH0KCiAgICAgICAgOwoKICAgICAgICBpZiAoZS5lcnJvcnMudXNlcm5hbWUpIHsKICAgICAgICAgIF90aGlzLnNlcnZlclZhbGlkYXRpb25FcnJvcnMudXNlcm5hbWUgPSBlLmVycm9ycy51c2VybmFtZTsKICAgICAgICB9CgogICAgICAgIDsKICAgICAgfSk7CiAgICB9LAogICAgY3JlYXRlVXNlcjogZnVuY3Rpb24gY3JlYXRlVXNlcigpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgidXNlcnMvYWRkIiwgdGhpcy5mb3JtKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIGNvbnNvbGUubG9nKCdzdWNjZXNzJyk7CgogICAgICAgIF90aGlzMi4kc3RvcmUuZGlzcGF0Y2goImFsZXJ0cy9zdWNjZXNzIiwgIlVzZXIgY3JlYXRlZCBzdWNjZXNzZnVsbHkuIik7CgogICAgICAgIF90aGlzMi51c2VyU2F2ZWQgPSB0cnVlOwogICAgICAgIF90aGlzMi5zZW5kaW5nID0gZmFsc2U7CiAgICAgICAgdmFyIHVzZXIgPSBfdGhpczIuJHN0b3JlLmdldHRlcnNbInVzZXJzL3VzZXIiXTsKICAgICAgICBjb25zb2xlLmxvZyh1c2VyKTsKCiAgICAgICAgX3RoaXMyLiRlbWl0KCd1c2VyLWNyZWF0ZWQnLCB1c2VyKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGUpIHsKICAgICAgICBjb25zb2xlLmxvZyhlKTsKCiAgICAgICAgX3RoaXMyLiRzdG9yZS5kaXNwYXRjaCgiYWxlcnRzL2Vycm9yIiwgIk9vcHMsIHNvbWV0aGluZyB3ZW50IHdyb25nISAiICsgZS5tZXNzYWdlKTsKCiAgICAgICAgX3RoaXMyLnNlbmRpbmcgPSBmYWxzZTsKCiAgICAgICAgaWYgKGUuZXJyb3JzLmVtYWlsKSB7CiAgICAgICAgICBfdGhpczIuc2VydmVyVmFsaWRhdGlvbkVycm9ycy5lbWFpbCA9IGUuZXJyb3JzLmVtYWlsOwogICAgICAgIH0KCiAgICAgICAgOwoKICAgICAgICBpZiAoZS5lcnJvcnMuZmlyc3RfbmFtZSkgewogICAgICAgICAgX3RoaXMyLnNlcnZlclZhbGlkYXRpb25FcnJvcnMuZmlyc3RfbmFtZSA9IGUuZXJyb3JzLmZpcnN0X25hbWU7CiAgICAgICAgfQoKICAgICAgICA7CgogICAgICAgIGlmIChlLmVycm9ycy5sYXN0X25hbWUpIHsKICAgICAgICAgIF90aGlzMi5zZXJ2ZXJWYWxpZGF0aW9uRXJyb3JzLmZpcnN0X25hbWUgPSBlLmVycm9ycy5sYXN0X25hbWU7CiAgICAgICAgfQoKICAgICAgICA7CgogICAgICAgIGlmIChlLmVycm9ycy51c2VybmFtZSkgewogICAgICAgICAgX3RoaXMyLnNlcnZlclZhbGlkYXRpb25FcnJvcnMudXNlcm5hbWUgPSBlLmVycm9ycy51c2VybmFtZTsKICAgICAgICB9CgogICAgICAgIDsgLy90aGlzLnNldEFwaVZhbGlkYXRpb24oZS5lcnJvcnMuZW1haWwpCiAgICAgIH0pOwogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIG5ld1VzZXI6IGZ1bmN0aW9uIG5ld1VzZXIoKSB7CiAgICAgIGlmICh0aGlzLnVzZXIgPT0gbnVsbCkgewogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9CgogICAgICByZXR1cm4gZmFsc2U7CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgaWYgKCF0aGlzLm5ld1VzZXIpIHsKICAgICAgdGhpcy5mb3JtLmlkID0gdGhpcy51c2VyLmlkOwogICAgICB0aGlzLmZvcm0udXNlcm5hbWUgPSB0aGlzLnVzZXIudXNlcm5hbWU7CiAgICAgIHRoaXMuZm9ybS5maXJzdF9uYW1lID0gdGhpcy51c2VyLmZpcnN0X25hbWU7CiAgICAgIHRoaXMuZm9ybS5sYXN0X25hbWUgPSB0aGlzLnVzZXIubGFzdF9uYW1lOwogICAgICB0aGlzLmZvcm0uZG9iID0gbnVsbDsKICAgICAgdGhpcy5mb3JtLmVtYWlsID0gdGhpcy51c2VyLmVtYWlsOwogICAgfSBlbHNlIHsKICAgICAgdGhpcy5jbGVhckZvcm0oKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["EditUserCard.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <form novalidate class=\"md-layout\" @submit.prevent=\"validateUser\">\n      <md-card class=\"md-layout-item\">\n              <md-card-header class=\"md-card-header-icon\">\n        <div class=\"card-icon\">\n          <md-icon>perm_identity</md-icon>\n        </div>\n        <div class=\"md-title\" v-if=\"newUser\">\n          Create New User\n        </div>\n        <div class=\"md-title\" v-else>\n          Edit User\n        </div>\n      </md-card-header>\n\n        <md-card-content>\n          <div class=\"md-layout md-gutter\">\n            <div class=\"md-layout-item md-small-size-100\">\n              <md-field :class=\"getValidationClass('first_name')\">\n                <label for=\"first-name\">First Name</label>\n                <md-input name=\"first-name\" id=\"first-name\" \n                  @input=\"serverValidationErrors.first_name=null\" \n                  v-model=\"form.first_name\" \n                  :disabled=\"sending\" />\n                <span class=\"md-error\" v-if=\"!$v.form.first_name.required\">The first name is required</span>\n                <span class=\"md-error\" v-else-if=\"!$v.form.first_name.minlength\">First name must be longer than 3 characters</span>\n              </md-field>\n              <span v-if=\"serverValidationErrors.first_name\">\n                  <span \n                      class=\"md-error\" \n                      v-for=\"error in serverValidationErrors.first_name\"\n                      :key=\"error\"                    \n                    >\n                    {{error}}\n                    <br>\n                  </span>\n                </span>\n            </div>\n\n            <div class=\"md-layout-item md-small-size-100\">\n              <md-field :class=\"getValidationClass('last_name')\">\n                <label for=\"last-name\">Last Name</label>\n                <md-input name=\"last-name\" id=\"last-name\" \n                  @input=\"serverValidationErrors.last_name=null\" \n                  autocomplete=\"family-name\" \n                  v-model=\"form.last_name\" \n                  :disabled=\"sending\" />\n                <span class=\"md-error\" v-if=\"!$v.form.last_name.required\">The last name is required</span>\n                <span class=\"md-error\" v-else-if=\"!$v.form.last_name.minlength\">Last name must be longer than 3 characters</span>\n              </md-field>\n              <span v-if=\"serverValidationErrors.last_name\">\n                  <span \n                      class=\"md-error\" \n                      v-for=\"error in serverValidationErrors.last_name\"\n                      :key=\"error\"                    \n                    >\n                    {{error}}\n                    <br>\n                  </span>\n                </span>\n            </div>\n          \n\n          <div class=\"md-layout-item md-small-size-100\">\n              <md-field :class=\"getValidationClass('username')\">\n                <label for=\"username\">Username</label>\n                <md-input name=\"username\" id=\"username\" \n                  @input=\"serverValidationErrors.username=null\" \n                  v-model=\"form.username\" \n                  :disabled=\"sending\" />\n                <span class=\"md-error\" v-if=\"!$v.form.username.required\">The username is required</span>\n                <span class=\"md-error\" v-if=\"!$v.form.username.alphaNum\">The username must be made of alpha numeric characters with no special characters or spaces</span>\n              </md-field>\n              <span v-if=\"serverValidationErrors.username\">\n                  <span \n                      class=\"md-error\" \n                      v-for=\"error in serverValidationErrors.username\"\n                      :key=\"error\"                    \n                    >\n                    {{error}}\n                    <br>\n                  </span>\n                </span>\n            </div>\n\n          </div>\n          <div class=\"md-layout md-gutter\">\n            <!-- <div class=\"md-layout-item md-small-size-100\">\n              <md-field>\n                <label for=\"dob\">Date of Birth</label>\n                <md-input type=\"date\" id=\"dob\" name=\"dob\" autocomplete=\"dob\" v-model=\"form.dob\" placeholder=\"Date of Birth\" :disabled=\"sending\" />\n                <md-datepicker v-model=\"form.dob\" :disabled=\"sending\" id=\"dob\" name=\"dob\">\n                  <label>Date of Birth</label>\n                </md-datepicker>\n              </md-field>\n            </div> -->\n            \n            <div class=\"md-layout-item md-small-size-100\">\n              <md-field :class=\"getValidationClass('email')\">\n                <label for=\"email\">Email</label>\n                <md-input \n                  @input=\"serverValidationErrors.email=null\" \n                  type=\"email\" name=\"email\" id=\"email\" \n                  autocomplete=\"email\" \n                  v-model=\"form.email\" \n                  :disabled=\"sending\" \n                />\n                <span class=\"md-error\" v-if=\"!$v.form.email.required\">The email is required</span>\n                <span class=\"md-error\" v-else-if=\"!$v.form.email.email\">Invalid email</span>\n              </md-field>\n              <!-- <validation-error :errors=\"serverValidationErrors.email\"/> -->\n                <span v-if=\"serverValidationErrors.email\">\n                  <span \n                      class=\"md-error\" \n                      v-for=\"error in serverValidationErrors.email\"\n                      :key=\"error\"                    \n                    >\n                    {{error}}\n                    <br>\n                  </span>\n                </span>\n            </div>\n          </div>\n        </md-card-content>\n\n        <md-progress-bar md-mode=\"indeterminate\" v-if=\"sending\" />\n\n        <md-card-actions>\n          <md-button type=\"submit\" class=\"md-primary\" :disabled=\"sending\">\n            <span v-if=\"newUser\">Create user</span>\n            <span v-else>Update user</span>\n          </md-button>\n        </md-card-actions>\n      </md-card>\n\n      <!-- <md-snackbar :md-active.sync=\"userSaved\">The user {{ lastUser }} was saved with success!</md-snackbar> -->\n    </form>\n  </div>\n</template>\n\n<script>\n  import { validationMixin } from 'vuelidate'\n  import {\n    required,\n    email,\n    minLength,\n    maxLength,\n    alphaNum\n  } from 'vuelidate/lib/validators'\n\n  import {ValidationError} from \"@/components\";\n\n  export default {\n    name: 'edit-user-card',\n    mixins: [validationMixin],\n    // components: {ValidationError},\n   \n    props: {\n      user: {type: Object, default: null}\n    },\n\n    data: () => ({\n      form: {\n        id: null,\n        first_name: null,\n        last_name: null,\n        username: null,\n        dob: null,\n        email: null,\n      },\n      serverValidationErrors: {\n          email: [],\n          first_name: [],\n          last_name: [],\n          username: [],\n      },\n      userSaved: false,\n      sending: false,\n      lastUser: null\n    }),\n    validations: {\n      form: {\n        first_name: {\n          required,\n          minLength: minLength(3)\n        },\n        last_name: {\n          required,\n          minLength: minLength(3)\n        },\n        email: {\n          required,\n          email\n        },\n        username: {\n          required,\n          alphaNum\n        }\n      }\n    },\n    methods: {\n      getValidationClass (fieldName) {\n        const field = this.$v.form[fieldName]\n\n        if (field) {\n          return {\n            'md-invalid': field.$invalid && field.$dirty\n          }\n        }\n      },\n      clearForm () {\n        this.$v.$reset()\n        this.form.first_name = null\n        this.form.last_name = null\n        this.form.username = null\n        this.form.dob = null\n        this.form.email = null\n      },\n      saveUser () {\n        this.sending = true\n        if(this.newUser){\n          this.createUser();\n        }else{\n          this.updateUser();\n        }\n        // Instead of this timeout, here you can call your API\n        // window.setTimeout(() => {\n        //   // this.lastUser = `${this.form.first_name} ${this.form.last_name}`\n        //   this.userSaved = true\n        //   this.sending = false\n        //   // this.clearForm()\n        // }, 1500)\n      },\n      validateUser () {\n        this.$v.$touch()\n\n        if (!this.$v.$invalid) {\n          this.saveUser()\n        }\n      },\n      updateUser() {\n        this.$store.dispatch(\"users/update\", this.form)\n        .then(response =>{\n          this.$store.dispatch(\"alerts/success\", \"Profile updated successfully.\")\n          this.userSaved = true\n          this.sending = false\n          //Emit with new user for prop to be re established\n          //this.user = await this.$store.getters[\"users/user\"]\n        })\n        .catch (e=>{\n          console.log(e);\n          this.$store.dispatch(\"alerts/error\", \"Oops, something went wrong! \" + e.message)\n          this.sending = false\n          if(e.errors.email){this.serverValidationErrors.email=e.errors.email;};\n          if(e.errors.first_name){this.serverValidationErrors.first_name=e.errors.first_name;};\n          if(e.errors.last_name){this.serverValidationErrors.first_name=e.errors.last_name;};\n          if(e.errors.username){this.serverValidationErrors.username=e.errors.username;};\n        })\n      },\n      createUser() {\n        this.$store.dispatch(\"users/add\", this.form)\n        .then(response =>{\n          console.log('success');\n          this.$store.dispatch(\"alerts/success\", \"User created successfully.\")\n          this.userSaved = true\n          this.sending = false\n          let user = this.$store.getters[\"users/user\"]\n          console.log(user);\n          this.$emit('user-created', user)\n        })\n        .catch (e=>{\n          console.log(e);\n          this.$store.dispatch(\"alerts/error\", \"Oops, something went wrong! \" + e.message)\n          this.sending = false\n          if(e.errors.email){this.serverValidationErrors.email=e.errors.email;};\n          if(e.errors.first_name){this.serverValidationErrors.first_name=e.errors.first_name;};\n          if(e.errors.last_name){this.serverValidationErrors.first_name=e.errors.last_name;};\n          if(e.errors.username){this.serverValidationErrors.username=e.errors.username;};\n          //this.setApiValidation(e.errors.email)\n        })\n      }\n    },\n    computed:{\n      newUser(){\n       if(this.user==null){\n          return true;\n        }\n        return false;\n      }\n    },\n    created(){\n        if(!this.newUser){\n          this.form.id = this.user.id\n          this.form.username = this.user.username\n          this.form.first_name = this.user.first_name\n          this.form.last_name = this.user.last_name\n          this.form.dob = null\n          this.form.email = this.user.email\n        }else{\n          this.clearForm()\n        }\n      }\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n  .md-progress-bar {\n    position: absolute;\n    top: 0;\n    right: 0;\n    left: 0;\n  }\n  .md-error{\n    bottom: -8px;\n    color: red;\n    font-size: smaller;\n  }\n</style>\n\n\n\n\n\n\n\n<!-- <template>\n  <form @submit.prevent=\"updateUser\">\n    <md-card>\n      <md-card-content>\n\n        <div class=\"md-layout\">\n          <label class=\"md-layout-item md-size-15 md-form-label\">\n            Name\n          </label>\n          <div class=\"md-layout-item\">\n            <md-field class=\"md-invalid\">\n              <md-input v-model=\"user.name\"/>\n              <validation-error :errors=\"validationErrors.name\"/>\n            </md-field>\n          </div>\n        </div>\n\n        <div class=\"md-layout\">\n          <label class=\"md-layout-item md-size-15 md-form-label\">\n            Email\n          </label>\n          <div class=\"md-layout-item\">\n            <md-field class=\"md-invalid\">\n              <md-input v-model=\"user.email\"/>\n              <validation-error :errors=\"validationErrors.email\"/>\n            </md-field>\n          </div>\n        </div>\n\n      </md-card-content>\n\n      <md-card-actions>\n        <md-button type=\"submit\">\n          Update User\n        </md-button>\n      </md-card-actions>\n\n    </md-card>\n  </form>\n</template>\n<script>\n  import {ValidationError} from \"@/components\";\n  import formMixin from \"@/mixins/form-mixin\";\n\n  export default {\n    name: \"edit-user-card\",\n\n    props: {\n      user: Object\n    },\n\n    components: {ValidationError},\n\n    mixins: [formMixin],\n\n    data() {\n      return {\n        validationErrors: {\n          email: [],\n          name: []\n        }\n      }\n    },\n\n    methods: {\n      updateUser() {\n        // if([\"1\", \"2\", \"3\"].includes(this.user.id)) {\n        //   await this.$store.dispatch(\"alerts/error\", \"You are not allowed not change data of default users.\")\n        //   return\n        // }\n        this.$store.dispatch(\"users/update\", this.user)\n        .then(response =>{\n          this.$store.dispatch(\"alerts/success\", \"Profile updated successfully.\")\n          //Emit with new user for prop to be re established\n          //this.user = await this.$store.getters[\"users/user\"]\n        })\n        .catch (e=>{\n          console.log(e);\n          this.$store.dispatch(\"alerts/error\", \"Oops, something went wrong! \" + e.message)\n          if(e.errors.email){this.validationErrors.email=e.errors.email;};\n          if(e.errors.name){this.validationErrors.name=e.errors.name;};\n          //this.setApiValidation(e.errors.email)\n        })\n      }\n\n    }\n  };\n</script>\n\n<style></style>\n-->"],"sourceRoot":"src/pages/Dashboard/Examples/UserProfile"}]}