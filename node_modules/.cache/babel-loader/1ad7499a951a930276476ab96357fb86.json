{"remainingRequest":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/babel-loader/lib/index.js!/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/src/components/InputBlocks/BankDetails.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/src/components/InputBlocks/BankDetails.vue","mtime":1606405364841},{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josephlaithwaite/Documents/VueLearning/NC-vue-laravel-dashboard/vue-material-dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IG5jRm9ybSBmcm9tICcuL25jRm9ybSc7CmltcG9ydCB7IHZhbGlkYXRpb25NaXhpbiB9IGZyb20gJ3Z1ZWxpZGF0ZSc7CmltcG9ydCB7IGhlbHBlcnMsIHJlcXVpcmVkLCBlbWFpbCwgbWluTGVuZ3RoLCBtYXhMZW5ndGgsIGFscGhhTnVtLCBkZWNpbWFsLCBpbnRlZ2VyLCB1cmwgfSBmcm9tICd2dWVsaWRhdGUvbGliL3ZhbGlkYXRvcnMnOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgbmNGb3JtOiBuY0Zvcm0KICB9LAogIG5hbWU6ICdiYW5rLWRldGFpbHMnLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBuYW1lT25BY2NvdW50OiAnJywKICAgICAgc29ydENvZGU6ICcnLAogICAgICBhY2NvdW50TnVtYmVyOiAnJywKICAgICAgcm9sbE51bWJlcjogJycsCiAgICAgIGJhbmtEZXRhaWxzRmllbGRzOiBbewogICAgICAgIGxhYmVsOiAiTmFtZSBPbiBBY2NvdW50IiwKICAgICAgICBpZDogIm5hbWVPbkFjY291bnQiLAogICAgICAgIGZpZWxkVHlwZTogJ2lucHV0JywKICAgICAgICBmaWVsZE9wdGlvbnM6IHsKICAgICAgICAgIGF1dG9jb21wbGV0ZTogJ25hbWUnLAogICAgICAgICAgc3BlbGxjaGVjazogZmFsc2UsCiAgICAgICAgICB0eXBlOiAndGV4dCcsCiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIGRpc2FibGVkOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgdmFsaWRhdGlvbnNGdW5jdGlvbnM6IHsKICAgICAgICAgIHJlcXVpcmVkOiByZXF1aXJlZCwKICAgICAgICAgIG1pbkxlbmd0aDogbWluTGVuZ3RoKDMpCiAgICAgICAgfQogICAgICB9LCB7CiAgICAgICAgbGFiZWw6ICJTb3J0IENvZGUiLAogICAgICAgIGlkOiAic29ydENvZGUiLAogICAgICAgIGZpZWxkVHlwZTogJ2lucHV0JywKICAgICAgICBmaWVsZE9wdGlvbnM6IHsKICAgICAgICAgIC8vIGhlbHBlclRleHQ6J011c3QgYmUgNiBkaWdpdHMgbG9uZycsCiAgICAgICAgICB0eXBlOiAndGV4dCcsCiAgICAgICAgICBzcGVsbGNoZWNrOiBmYWxzZSwKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgZGlzYWJsZWQ6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICB2YWxpZGF0aW9uc0Z1bmN0aW9uczogewogICAgICAgICAgcmVxdWlyZWQ6IHJlcXVpcmVkLAogICAgICAgICAgbWF4TGVuZ3RoOiBtYXhMZW5ndGgoNikKICAgICAgICB9IC8vIG1pbkxlbmd0aDptaW5MZW5ndGgoNil9LAoKICAgICAgfSwgewogICAgICAgIGxhYmVsOiAiQWNjb3VudCBOdW1iZXIiLAogICAgICAgIGlkOiAiYWNjb3VudE51bWJlciIsCiAgICAgICAgZmllbGRUeXBlOiAnaW5wdXQnLAogICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgIGZpZWxkT3B0aW9uczogewogICAgICAgICAgLy8gaGVscGVyVGV4dDonTXVzdCBiZSBiZXR3ZWVuIDYgYW5kIDggZGlnaXRzIGxvbmcnLAogICAgICAgICAgdHlwZTogJ3RleHQnLAogICAgICAgICAgc3BlbGxjaGVjazogZmFsc2UsCiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIGRpc2FibGVkOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgdmFsaWRhdGlvbnNGdW5jdGlvbnM6IHsKICAgICAgICAgIHJlcXVpcmVkOiByZXF1aXJlZCwKICAgICAgICAgIG1heExlbmd0aDogbWF4TGVuZ3RoKDgpLAogICAgICAgICAgbWluTGVuZ3RoOiBtaW5MZW5ndGgoNikKICAgICAgICB9CiAgICAgIH0sIHsKICAgICAgICBsYWJlbDogIkJ1aWxkaW5nIFNvY2lldHkgUm9sbCBOdW1iZXIgKGlmIHlvdSBoYXZlIG9uZSkiLAogICAgICAgIGlkOiAicm9sbE51bWJlciIsCiAgICAgICAgZmllbGRUeXBlOiAnaW5wdXQnLAogICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgIGZpZWxkT3B0aW9uczogewogICAgICAgICAgLy8gaGVscGVyVGV4dDonWW91IGNhbiBmaW5kIGl0IG9uIHlvdXIgY2FyZCwgc3RhdGVtZW50IG9yIHBhc3Nib29rJywKICAgICAgICAgIHR5cGU6ICd0ZXh0JywKICAgICAgICAgIHNwZWxsY2hlY2s6IGZhbHNlLAogICAgICAgICAgZGlzYWJsZWQ6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICB2YWxpZGF0aW9uc0Z1bmN0aW9uczoge30KICAgICAgfV0KICAgIH07CiAgfQp9Ow=="},{"version":3,"sources":["BankDetails.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoFA,OAAA,MAAA,MAAA,UAAA;AACA,SAAA,eAAA,QAAA,WAAA;AACA,SACA,OADA,EAEA,QAFA,EAGA,KAHA,EAIA,SAJA,EAKA,SALA,EAMA,QANA,EAOA,OAPA,EAQA,OARA,EASA,GATA,QAUA,0BAVA;AAYA,eAAA;AACA,EAAA,UAAA,EAAA;AAAA,IAAA,MAAA,EAAA;AAAA,GADA;AAEA,EAAA,IAAA,EAAA,cAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,aAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA,EAFA;AAGA,MAAA,aAAA,EAAA,EAHA;AAIA,MAAA,UAAA,EAAA,EAJA;AAKA,MAAA,iBAAA,EACA,CACA;AACA,QAAA,KAAA,EAAA,iBADA;AAEA,QAAA,EAAA,EAAA,eAFA;AAGA,QAAA,SAAA,EAAA,OAHA;AAIA,QAAA,YAAA,EAAA;AACA,UAAA,YAAA,EAAA,MADA;AAEA,UAAA,UAAA,EAAA,KAFA;AAGA,UAAA,IAAA,EAAA,MAHA;AAIA,UAAA,QAAA,EAAA,IAJA;AAKA,UAAA,QAAA,EAAA;AALA,SAJA;AAWA,QAAA,oBAAA,EAAA;AAAA,UAAA,QAAA,EAAA,QAAA;AAAA,UAAA,SAAA,EAAA,SAAA,CAAA,CAAA;AAAA;AAXA,OADA,EAcA;AACA,QAAA,KAAA,EAAA,WADA;AAEA,QAAA,EAAA,EAAA,UAFA;AAGA,QAAA,SAAA,EAAA,OAHA;AAIA,QAAA,YAAA,EAAA;AACA;AACA,UAAA,IAAA,EAAA,MAFA;AAGA,UAAA,UAAA,EAAA,KAHA;AAIA,UAAA,QAAA,EAAA,IAJA;AAKA,UAAA,QAAA,EAAA;AALA,SAJA;AAWA,QAAA,oBAAA,EAAA;AAAA,UAAA,QAAA,EAAA,QAAA;AAAA,UAAA,SAAA,EAAA,SAAA,CAAA,CAAA;AAAA,SAXA,CAYA;;AAZA,OAdA,EA4BA;AACA,QAAA,KAAA,EAAA,gBADA;AAEA,QAAA,EAAA,EAAA,eAFA;AAGA,QAAA,SAAA,EAAA,OAHA;AAIA,QAAA,QAAA,EAAA,IAJA;AAKA,QAAA,YAAA,EAAA;AACA;AACA,UAAA,IAAA,EAAA,MAFA;AAGA,UAAA,UAAA,EAAA,KAHA;AAIA,UAAA,QAAA,EAAA,IAJA;AAKA,UAAA,QAAA,EAAA;AALA,SALA;AAYA,QAAA,oBAAA,EAAA;AAAA,UAAA,QAAA,EAAA,QAAA;AAAA,UAAA,SAAA,EAAA,SAAA,CAAA,CAAA,CAAA;AAAA,UAAA,SAAA,EAAA,SAAA,CAAA,CAAA;AAAA;AAZA,OA5BA,EA0CA;AACA,QAAA,KAAA,EAAA,gDADA;AAEA,QAAA,EAAA,EAAA,YAFA;AAGA,QAAA,SAAA,EAAA,OAHA;AAIA,QAAA,QAAA,EAAA,IAJA;AAKA,QAAA,YAAA,EAAA;AACA;AACA,UAAA,IAAA,EAAA,MAFA;AAGA,UAAA,UAAA,EAAA,KAHA;AAIA,UAAA,QAAA,EAAA;AAJA,SALA;AAWA,QAAA,oBAAA,EAAA;AAXA,OA1CA;AANA,KAAA;AA+DA;AAnEA,CAAA","sourcesContent":["<template>\n<span>\n    <nc-form\n        :newItem=\"true\"\n        :itemInfo=\"bankDetailsFields\"\n    ></nc-form>\n\n    <!-- <form class=\"md-layout md-alignment-top-center\">\n        <md-field>\n            <label for=\"name-on-the-account\">\n                Name on the account\n            </label>\n            <md-input \n                v-model=\"nameOnAccount\"\n                :required=\"true\"\n                id=\"name-on-the-account\" \n                name=\"name-on-the-account\" \n                type=\"text\" \n                spellcheck=\"false\"\n                autocomplete=\"name\"\n            />\n        </md-field>\n\n        <md-field>\n            <md-icon>facebook</md-icon>\n            <label for=\"sort-code\">\n                Sort code\n            </label>\n            <span class=\"md-helper-text\">\n                Must be 6 digits long\n            </span>\n            <md-input \n                v-model=\"sortCode\"\n                required\n                id=\"sort-code\" \n                name=\"sort-code\" \n                type=\"text\" \n                spellcheck=\"false\" \n                pattern=\"[0-9]*\" \n                inputmode=\"numeric\"\n                autocomplete=\"sort code\"\n            />\n        </md-field>\n\n        <md-field>\n            <label class=\"govuk-label\" for=\"account-number\">\n                Account number\n            </label>\n            <span class=\"md-helper-text\">\n                Must be between 6 and 8 digits long\n            </span>\n            <md-input \n                v-model=\"accountNumber\"\n                required\n                id=\"account-number\" \n                name=\"account-number\" \n                type=\"text\" \n                spellcheck=\"false\" \n                pattern=\"[0-9]*\" \n                inputmode=\"numeric\"\n                autocomplete=\"account number\"\n            />\n        </md-field>\n\n        <md-field>\n            <label class=\"govuk-label\" for=\"roll-number\">\n                Building society roll number (if you have one)\n            </label>\n            <span class=\"md-helper-text\">\n                You can find it on your card, statement or passbook\n            </span>\n            <md-input \n                v-model=\"rollNumber\"\n                id=\"roll-number\" \n                name=\"roll-number\" \n                type=\"text\" \n                autocomplete=\"roll-number\"\n            />\n        </md-field> \n    </form>-->\n</span>\n</template>\n\n<script>\nimport ncForm from './ncForm'\nimport { validationMixin } from 'vuelidate'\n  import {\n    helpers,\n    required,\n    email,\n    minLength,\n    maxLength,\n    alphaNum,\n    decimal,\n    integer,\n    url,\n  } from 'vuelidate/lib/validators'\n\nexport default {\n  components: { ncForm },\n    name:'bank-details',\n    data(){\n        return{\n            nameOnAccount:'',\n            sortCode:'',\n            accountNumber:'',\n            rollNumber:'',\n            bankDetailsFields:\n            [\n                {\n                    label: \"Name On Account\",\n                    id: \"nameOnAccount\",\n                    fieldType: 'input',\n                    fieldOptions:{\n                        autocomplete:'name',\n                        spellcheck:false,\n                        type: 'text',\n                        required: true,\n                        disabled: false,\n                    },\n                    validationsFunctions: {required, minLength:minLength(3)},\n                },\n                {\n                    label: \"Sort Code\",\n                    id: \"sortCode\",\n                    fieldType: 'input',\n                    fieldOptions:{\n                        // helperText:'Must be 6 digits long',\n                        type: 'text',\n                        spellcheck:false,\n                        required: true,\n                        disabled: false,\n                    },\n                    validationsFunctions: {required, maxLength:maxLength(6)}, \n                    // minLength:minLength(6)},\n                },\n                {\n                    label: \"Account Number\",\n                    id: \"accountNumber\",\n                    fieldType: 'input',\n                    required:true,\n                    fieldOptions:{\n                        // helperText:'Must be between 6 and 8 digits long',\n                        type: 'text',\n                        spellcheck:false,\n                        required: true,\n                        disabled: false,\n                    },\n                    validationsFunctions: {required,  maxLength:maxLength(8), minLength:minLength(6)},\n                },\n                {\n                    label: \"Building Society Roll Number (if you have one)\",\n                    id: \"rollNumber\",\n                    fieldType: 'input',\n                    required:true,\n                    fieldOptions:{\n                        // helperText:'You can find it on your card, statement or passbook',\n                        type: 'text',\n                        spellcheck:false,\n                        disabled: false,\n                    },\n                    validationsFunctions: {},\n                }\n            ]\n        }\n    }\n}\n</script>"],"sourceRoot":"src/components/InputBlocks"}]}